<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="stylesheet" href="/Template/css/vendors_css.css">
    <link href="/Studtable/style.bundled1cf.css" rel="stylesheet" type="text/css" />

    <!-- Style-->
    <link rel="stylesheet" href="/Template/css/style.css">
</head>

<body id="bg">
      <input type="text" value="{{tutDetails._id}}" id="tutorId" hidden>
    <div style="position: absolute; margin-top: 200px; " class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3 col-sm-12">
                <div id="chat">

                    {{#each chat}} <div>
                        {{this.name}} : {{this.message}}
                    </div>
                    {{/each}}
                    <div id="messages">
                    </div>
                    <br>
                    <textarea id="textarea" class="form-control" placeholder="Enter message..."></textarea>
                    <center>
                        <p
                            style="color: lightseagreen; margin-top: 5px; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">
                            PRESS ENTER TO SEND A MESSAGE</p>
                    </center>
                </div>
            </div>
        </div>
    </div>

</body>
<script src="../Template/js/vendors.min.js"></script>
<script src="../Template/corenav-master/coreNavigation-1.1.3.js"></script>
<script src="../Template/vendor_components/jquery-ui/jquery-ui.min.js"></script>
<script src="../socket.io/socket.io.js"></script>

<script>
    (function () {
        var element = function (id) {
            return document.getElementById(id);
        }

        // Get Elements
        var messages = element('messages');
        var textarea = element('textarea');
        var id=element('tutorId').value
        // Connect to socket.io
        var socket = io();
        // Check for connection
        if (socket !== undefined) {
            console.log('Connected to socket...');

            // Handle Output
            socket.on('output', function (data) {
                if (data.length) {
                    for (var x = 0; x < data.length; x++) {
                        // Build out message div
                        var message = document.createElement('div');
                        message.setAttribute('class', 'chat-message');
                        message.textContent = data[x].name + " : " + data[x].message;
                        messages.appendChild(message);
                        messages.insertAfter(message, messages.firstChild);
                    }
                }
            });



            // Handle Input

            textarea.addEventListener('keydown', function (event) {
                if (event.which === 13 && event.shiftKey == false) {
                    // Emit to server input
                    if (textarea.value != '') {
                        socket.emit('input', {
                            message: textarea.value,
                            type: "tutor",
                            tutorId:id
                        });
                    }
                    textarea.value = ''
                    event.preventDefault();
                }
            })

            // Handle Chat Clear



        }

    })();
</script>